resources:
  - name: gitrepo_outgoingwebhook
    type: GitRepo
    configuration:
      gitProvider: pradnyashinde   # replace with your integration
      path: pradnyashinde/pipelines_outgoing_webhook    # replace with your repository name
      branches:
        include: {{gitBranch}}

  - name: MagentoImage
    type: Image
    configuration:
      registry: ArtifactoryIntegration
      sourceRepository: docker-local
      imageName: 34.77.95.84:8082/docker-local/alpine37
      imageTag: latest

  - name: PradnyaOutgoingWebhook
    type: OutgoingWebhook
    configuration:
      webhookName: PipelinesOutgoingWebhook                           # name of an Outgoing Webhook Integration
      method: POST             # default POST
      #Parameters: <string>                            # query string to be appended to the outgoing URL
      #path:       <string>
      #headers:
        #Content-type: <valid request content types>
        #accept: xyc

pipelines:
  - name: outgoing_webhook_pipeline
    steps:
      - name: docker_build
        type: DockerBuild
        configuration:
          dockerFileLocation: .
          dockerFileName: Dockerfile
          dockerImageName: '34.77.95.84:8082/docker-local/alpine37'  # replace with the image name you want
          dockerImageTag: "{{gitBranch}}-${run_number}"
          inputResources:
            - name: gitrepo_outgoingwebhook
          integrations:
            - name: ArtifactoryIntegration # replace with your Artifactory integration

      - name: docker_push
        type: DockerPush
        configuration:
          environmentVariables: 
            pradnyas_outhook_payload_file: "${step_tmp_dir}/payload.json"
          targetRepository: docker-local  # replace if needed
          autoPublishBuildInfo: false
          integrations:
            - name: ArtifactoryIntegration # replace with your Artifactory integration
          inputSteps:
            - name: docker_build
          outputResources:
            - name: MagentoImage
            - name: PradnyaOutgoingWebhook
        execution:
          onExecute: 
            - export imageName="testImageName"
            - export imageTag="testImageTag"
          onSuccess:
            #- set_payload PradnyaOutgoingWebhook "{\"imageName\":\"$res_MagentoImage_imageName\", \"imageTag\":\"$res_MagentoImage_imageTag\"}"
            #- set_payload PradnyaOutgoingWebhook "{\"imageName\":\"MagentoImageName\", \"imageTag\":\"MagentoImageTag\"}"
            - echo "{\"imageName\":\"$imageName\",\"imageTag\":\"$imageTag\"}" > $pradnyas_outhook_payload_file
            - set_payload PradnyaOutgoingWebhook $pradnyas_outhook_payload_file --file

            
            
            
            
            
